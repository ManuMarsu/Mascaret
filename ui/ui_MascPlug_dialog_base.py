# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\manuel.collongues\AppData\Roaming\QGIS\QGIS3\profiles\default\python\plugins\Mascaret\ui\MascPlug_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MascPlug(object):
    def setupUi(self, MascPlug):
        MascPlug.setObjectName("MascPlug")
        MascPlug.setEnabled(True)
        MascPlug.resize(902, 738)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/icon_base.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MascPlug.setWindowIcon(icon)
        MascPlug.setIconSize(QtCore.QSize(24, 24))
        self.centralwidget = QtWidgets.QWidget(MascPlug)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.crsWidget = QgsProjectionSelectionWidget(self.centralwidget)
        self.crsWidget.setMinimumSize(QtCore.QSize(300, 0))
        self.crsWidget.setMaximumSize(QtCore.QSize(400, 16777215))
        self.crsWidget.setObjectName("crsWidget")
        self.horizontalLayout.addWidget(self.crsWidget)
        self.gridLayout_2.addLayout(self.horizontalLayout, 1, 0, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setMinimumSize(QtCore.QSize(200, 200))
        self.textEdit.setMouseTracking(False)
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_2.addWidget(self.textEdit, 0, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.connsCbo = QtWidgets.QComboBox(self.centralwidget)
        self.connsCbo.setMinimumSize(QtCore.QSize(200, 0))
        self.connsCbo.setObjectName("connsCbo")
        self.gridLayout.addWidget(self.connsCbo, 0, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 3, 1, 1)
        self.labelCurDatabase = QtWidgets.QLabel(self.centralwidget)
        self.labelCurDatabase.setObjectName("labelCurDatabase")
        self.gridLayout.addWidget(self.labelCurDatabase, 0, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 2, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_2.addItem(spacerItem3, 3, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem4, 1, 1, 1, 1)
        MascPlug.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MascPlug)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 902, 21))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuSetting = QtWidgets.QMenu(self.menuHelp)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/options.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuSetting.setIcon(icon1)
        self.menuSetting.setObjectName("menuSetting")
        self.menu_Tools = QtWidgets.QMenu(self.menubar)
        self.menu_Tools.setObjectName("menu_Tools")
        self.menuDB = QtWidgets.QMenu(self.menubar)
        self.menuDB.setObjectName("menuDB")
        self.menuUpate_table = QtWidgets.QMenu(self.menuDB)
        self.menuUpate_table.setObjectName("menuUpate_table")
        self.menuRun = QtWidgets.QMenu(self.menubar)
        self.menuRun.setObjectName("menuRun")
        self.menuPost_Treatment = QtWidgets.QMenu(self.menubar)
        self.menuPost_Treatment.setObjectName("menuPost_Treatment")
        self.menuWater_Quality = QtWidgets.QMenu(self.menubar)
        self.menuWater_Quality.setObjectName("menuWater_Quality")
        MascPlug.setMenuBar(self.menubar)
        self.dbToolBar = QtWidgets.QToolBar(MascPlug)
        self.dbToolBar.setObjectName("dbToolBar")
        MascPlug.addToolBar(QtCore.Qt.TopToolBarArea, self.dbToolBar)
        self.ToolsToolBar = QtWidgets.QToolBar(MascPlug)
        self.ToolsToolBar.setObjectName("ToolsToolBar")
        MascPlug.addToolBar(QtCore.Qt.TopToolBarArea, self.ToolsToolBar)
        self.RunToolBar = QtWidgets.QToolBar(MascPlug)
        self.RunToolBar.setObjectName("RunToolBar")
        MascPlug.addToolBar(QtCore.Qt.TopToolBarArea, self.RunToolBar)
        self.PostTreatmentToolBar = QtWidgets.QToolBar(MascPlug)
        self.PostTreatmentToolBar.setObjectName("PostTreatmentToolBar")
        MascPlug.addToolBar(QtCore.Qt.TopToolBarArea, self.PostTreatmentToolBar)
        self.WaterQualityToolBar = QtWidgets.QToolBar(MascPlug)
        self.WaterQualityToolBar.setAcceptDrops(True)
        self.WaterQualityToolBar.setObjectName("WaterQualityToolBar")
        MascPlug.addToolBar(QtCore.Qt.TopToolBarArea, self.WaterQualityToolBar)
        self.actionWebsite = QtWidgets.QAction(MascPlug)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/webSite.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionWebsite.setIcon(icon2)
        self.actionWebsite.setObjectName("actionWebsite")
        self.actionWikisite = QtWidgets.QAction(MascPlug)
        self.actionWikisite.setIcon(icon2)
        self.actionWikisite.setObjectName("actionWikisite")
        self.actionAbout = QtWidgets.QAction(MascPlug)
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionDeleteModel = QtWidgets.QAction(MascPlug)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/dbDeleteModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteModel.setIcon(icon3)
        self.actionDeleteModel.setObjectName("actionDeleteModel")
        self.actionRefresh_Database = QtWidgets.QAction(MascPlug)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/refreshConnections.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRefresh_Database.setIcon(icon4)
        self.actionRefresh_Database.setObjectName("actionRefresh_Database")
        self.actionExport_Model = QtWidgets.QAction(MascPlug)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/dbExtractModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Model.setIcon(icon5)
        self.actionExport_Model.setObjectName("actionExport_Model")
        self.action_Extract_MNTfor_profile = QtWidgets.QAction(MascPlug)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/mntExtract.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Extract_MNTfor_profile.setIcon(icon6)
        self.action_Extract_MNTfor_profile.setObjectName("action_Extract_MNTfor_profile")
        self.actionSteady = QtWidgets.QAction(MascPlug)
        self.actionSteady.setObjectName("actionSteady")
        self.actionUnsteady = QtWidgets.QAction(MascPlug)
        self.actionUnsteady.setObjectName("actionUnsteady")
        self.actionTranscritical = QtWidgets.QAction(MascPlug)
        self.actionTranscritical.setObjectName("actionTranscritical")
        self.actionCreate_Geometry = QtWidgets.QAction(MascPlug)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/geo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_Geometry.setIcon(icon7)
        self.actionCreate_Geometry.setObjectName("actionCreate_Geometry")
        self.actionCreate_xcas = QtWidgets.QAction(MascPlug)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/xcas.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_xcas.setIcon(icon8)
        self.actionCreate_xcas.setObjectName("actionCreate_xcas")
        self.actionSteadyRun = QtWidgets.QAction(MascPlug)
        self.actionSteadyRun.setObjectName("actionSteadyRun")
        self.actionUnsteadyRun = QtWidgets.QAction(MascPlug)
        self.actionUnsteadyRun.setObjectName("actionUnsteadyRun")
        self.actionTranscriticalRun = QtWidgets.QAction(MascPlug)
        self.actionTranscriticalRun.setObjectName("actionTranscriticalRun")
        self.actionObservation_Load = QtWidgets.QAction(MascPlug)
        self.actionObservation_Load.setObjectName("actionObservation_Load")
        self.actionCreate_New_Model = QtWidgets.QAction(MascPlug)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/dbCreateModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_New_Model.setIcon(icon9)
        self.actionCreate_New_Model.setObjectName("actionCreate_New_Model")
        self.actionLoad_Model = QtWidgets.QAction(MascPlug)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/dbLoadModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLoad_Model.setIcon(icon10)
        self.actionLoad_Model.setObjectName("actionLoad_Model")
        self.actionOptions = QtWidgets.QAction(MascPlug)
        self.actionOptions.setObjectName("actionOptions")
        self.actionRestore_Default_Options = QtWidgets.QAction(MascPlug)
        self.actionRestore_Default_Options.setObjectName("actionRestore_Default_Options")
        self.actionExample = QtWidgets.QAction(MascPlug)
        self.actionExample.setObjectName("actionExample")
        self.actionHydrogramme = QtWidgets.QAction(MascPlug)
        self.actionHydrogramme.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/hydrogramme.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHydrogramme.setIcon(icon11)
        self.actionHydrogramme.setObjectName("actionHydrogramme")
        self.actionCross_section = QtWidgets.QAction(MascPlug)
        self.actionCross_section.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/profil.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCross_section.setIcon(icon12)
        self.actionCross_section.setObjectName("actionCross_section")
        self.actionCross_section_results = QtWidgets.QAction(MascPlug)
        self.actionCross_section_results.setCheckable(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/profilResult.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCross_section_results.setIcon(icon13)
        self.actionCross_section_results.setObjectName("actionCross_section_results")
        self.actionParameters = QtWidgets.QAction(MascPlug)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/parameter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionParameters.setIcon(icon14)
        self.actionParameters.setObjectName("actionParameters")
        self.actionRun = QtWidgets.QAction(MascPlug)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun.setIcon(icon15)
        self.actionRun.setObjectName("actionRun")
        self.actionDelete_Run = QtWidgets.QAction(MascPlug)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/croix.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Run.setIcon(icon16)
        self.actionDelete_Run.setObjectName("actionDelete_Run")
        self.actionExport_Run = QtWidgets.QAction(MascPlug)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/repSav.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Run.setIcon(icon17)
        self.actionExport_Run.setObjectName("actionExport_Run")
        self.actionImport_Model = QtWidgets.QAction(MascPlug)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/dbImportModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Model.setIcon(icon18)
        self.actionImport_Model.setObjectName("actionImport_Model")
        self.actionParameters_Water_Quality = QtWidgets.QAction(MascPlug)
        self.actionParameters_Water_Quality.setEnabled(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/parameterWQ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionParameters_Water_Quality.setIcon(icon19)
        self.actionParameters_Water_Quality.setObjectName("actionParameters_Water_Quality")
        self.actionTracer_Laws = QtWidgets.QAction(MascPlug)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/lawWQ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTracer_Laws.setIcon(icon20)
        self.actionTracer_Laws.setObjectName("actionTracer_Laws")
        self.actionexport_tracer_files = QtWidgets.QAction(MascPlug)
        self.actionexport_tracer_files.setObjectName("actionexport_tracer_files")
        self.actionAdd_WQ_tables = QtWidgets.QAction(MascPlug)
        self.actionAdd_WQ_tables.setObjectName("actionAdd_WQ_tables")
        self.actionCreate_Basin = QtWidgets.QAction(MascPlug)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/basin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreate_Basin.setIcon(icon21)
        self.actionCreate_Basin.setObjectName("actionCreate_Basin")
        self.actionBasin = QtWidgets.QAction(MascPlug)
        self.actionBasin.setCheckable(True)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/basinResult.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBasin.setIcon(icon22)
        self.actionBasin.setObjectName("actionBasin")
        self.action_update_bin = QtWidgets.QAction(MascPlug)
        self.action_update_bin.setObjectName("action_update_bin")
        self.actionAdd_Structure_tables = QtWidgets.QAction(MascPlug)
        self.actionAdd_Structure_tables.setObjectName("actionAdd_Structure_tables")
        self.actionAdd_Structure_temporal_tables = QtWidgets.QAction(MascPlug)
        self.actionAdd_Structure_temporal_tables.setObjectName("actionAdd_Structure_temporal_tables")
        self.actionStructures = QtWidgets.QAction(MascPlug)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/bridge.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStructures.setIcon(icon23)
        self.actionStructures.setObjectName("actionStructures")
        self.actionStructures_weirs = QtWidgets.QAction(MascPlug)
        self.actionStructures_weirs.setObjectName("actionStructures_weirs")
        self.actionTest = QtWidgets.QAction(MascPlug)
        self.actionTest.setObjectName("actionTest")
        self.actionGraphRes = QtWidgets.QAction(MascPlug)
        self.actionGraphRes.setCheckable(True)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/graph_struct.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGraphRes.setIcon(icon24)
        self.actionGraphRes.setObjectName("actionGraphRes")
        self.actionExport_Model_Files = QtWidgets.QAction(MascPlug)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/Model.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Model_Files.setIcon(icon25)
        self.actionExport_Model_Files.setObjectName("actionExport_Model_Files")
        self.actionImport_Results = QtWidgets.QAction(MascPlug)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/save_res.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_Results.setIcon(icon26)
        self.actionImport_Results.setObjectName("actionImport_Results")
        self.actionUpdate_all_PK = QtWidgets.QAction(MascPlug)
        self.actionUpdate_all_PK.setObjectName("actionUpdate_all_PK")
        self.actionObservations = QtWidgets.QAction(MascPlug)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/lawObs.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionObservations.setIcon(icon27)
        self.actionObservations.setObjectName("actionObservations")
        self.actionScores = QtWidgets.QAction(MascPlug)
        self.actionScores.setObjectName("actionScores")
        self.actionImport_Old_Model = QtWidgets.QAction(MascPlug)
        self.actionImport_Old_Model.setObjectName("actionImport_Old_Model")
        self.actionHydro_Laws = QtWidgets.QAction(MascPlug)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/plugins/Mascaret/icones/lawHydro.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHydro_Laws.setIcon(icon28)
        self.actionHydro_Laws.setObjectName("actionHydro_Laws")
        self.menuSetting.addAction(self.actionOptions)
        self.menuSetting.addAction(self.actionRestore_Default_Options)
        self.menuHelp.addAction(self.menuSetting.menuAction())
        self.menuHelp.addAction(self.actionWebsite)
        self.menuHelp.addAction(self.actionWikisite)
        self.menuHelp.addAction(self.actionAbout)
        self.menu_Tools.addAction(self.actionHydro_Laws)
        self.menu_Tools.addAction(self.actionCross_section)
        self.menu_Tools.addAction(self.actionObservations)
        self.menu_Tools.addAction(self.actionStructures)
        self.menu_Tools.addAction(self.actionStructures_weirs)
        self.menu_Tools.addAction(self.actionTest)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.action_Extract_MNTfor_profile)
        self.menu_Tools.addAction(self.actionUpdate_all_PK)
        self.menuDB.addAction(self.actionRefresh_Database)
        self.menuDB.addAction(self.action_update_bin)
        self.menuDB.addSeparator()
        self.menuDB.addAction(self.actionCreate_New_Model)
        self.menuDB.addAction(self.actionLoad_Model)
        self.menuDB.addAction(self.actionDeleteModel)
        self.menuDB.addAction(self.menuUpate_table.menuAction())
        self.menuDB.addSeparator()
        self.menuDB.addAction(self.actionExport_Model)
        self.menuDB.addAction(self.actionImport_Model)
        self.menuDB.addAction(self.actionImport_Old_Model)
        self.menuRun.addAction(self.actionParameters)
        self.menuRun.addSeparator()
        self.menuRun.addAction(self.actionCreate_Geometry)
        self.menuRun.addAction(self.actionCreate_xcas)
        self.menuRun.addAction(self.actionCreate_Basin)
        self.menuRun.addAction(self.actionExport_Model_Files)
        self.menuRun.addSeparator()
        self.menuRun.addAction(self.actionRun)
        self.menuRun.addSeparator()
        self.menuRun.addAction(self.actionExport_Run)
        self.menuRun.addAction(self.actionDelete_Run)
        self.menuRun.addAction(self.actionImport_Results)
        self.menuPost_Treatment.addAction(self.actionHydrogramme)
        self.menuPost_Treatment.addAction(self.actionCross_section_results)
        self.menuPost_Treatment.addAction(self.actionBasin)
        self.menuPost_Treatment.addAction(self.actionGraphRes)
        self.menuPost_Treatment.addSeparator()
        self.menuPost_Treatment.addAction(self.actionScores)
        self.menuWater_Quality.addAction(self.actionParameters_Water_Quality)
        self.menuWater_Quality.addAction(self.actionTracer_Laws)
        self.menuWater_Quality.addAction(self.actionexport_tracer_files)
        self.menubar.addAction(self.menuDB.menuAction())
        self.menubar.addAction(self.menu_Tools.menuAction())
        self.menubar.addAction(self.menuRun.menuAction())
        self.menubar.addAction(self.menuPost_Treatment.menuAction())
        self.menubar.addAction(self.menuWater_Quality.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.dbToolBar.addAction(self.actionRefresh_Database)
        self.dbToolBar.addAction(self.actionCreate_New_Model)
        self.dbToolBar.addAction(self.actionLoad_Model)
        self.dbToolBar.addAction(self.actionDeleteModel)
        self.dbToolBar.addAction(self.actionExport_Model)
        self.dbToolBar.addAction(self.actionImport_Model)
        self.ToolsToolBar.addAction(self.actionHydro_Laws)
        self.ToolsToolBar.addAction(self.actionCross_section)
        self.ToolsToolBar.addAction(self.actionObservations)
        self.ToolsToolBar.addAction(self.actionStructures)
        self.ToolsToolBar.addSeparator()
        self.ToolsToolBar.addAction(self.action_Extract_MNTfor_profile)
        self.RunToolBar.addAction(self.actionParameters)
        self.RunToolBar.addSeparator()
        self.RunToolBar.addAction(self.actionCreate_Geometry)
        self.RunToolBar.addAction(self.actionCreate_xcas)
        self.RunToolBar.addAction(self.actionCreate_Basin)
        self.RunToolBar.addAction(self.actionExport_Model_Files)
        self.RunToolBar.addSeparator()
        self.RunToolBar.addAction(self.actionRun)
        self.RunToolBar.addSeparator()
        self.RunToolBar.addAction(self.actionExport_Run)
        self.RunToolBar.addAction(self.actionDelete_Run)
        self.RunToolBar.addAction(self.actionImport_Results)
        self.PostTreatmentToolBar.addAction(self.actionCross_section_results)
        self.PostTreatmentToolBar.addAction(self.actionHydrogramme)
        self.PostTreatmentToolBar.addAction(self.actionBasin)
        self.PostTreatmentToolBar.addAction(self.actionGraphRes)
        self.WaterQualityToolBar.addAction(self.actionParameters_Water_Quality)
        self.WaterQualityToolBar.addAction(self.actionTracer_Laws)

        self.retranslateUi(MascPlug)
        QtCore.QMetaObject.connectSlotsByName(MascPlug)

    def retranslateUi(self, MascPlug):
        _translate = QtCore.QCoreApplication.translate
        MascPlug.setWindowTitle(_translate("MascPlug", "Mascaret"))
        self.label.setText(_translate("MascPlug", "Projection"))
        self.labelCurDatabase.setText(_translate("MascPlug", "DB Connection:"))
        self.menuHelp.setTitle(_translate("MascPlug", "Help"))
        self.menuSetting.setTitle(_translate("MascPlug", "Setting"))
        self.menu_Tools.setTitle(_translate("MascPlug", "Tools"))
        self.menuDB.setTitle(_translate("MascPlug", "Database"))
        self.menuUpate_table.setTitle(_translate("MascPlug", "Update Table"))
        self.menuRun.setTitle(_translate("MascPlug", "Run"))
        self.menuPost_Treatment.setTitle(_translate("MascPlug", "Post-Treatment"))
        self.menuWater_Quality.setTitle(_translate("MascPlug", "Water Quality"))
        self.dbToolBar.setWindowTitle(_translate("MascPlug", "toolBar"))
        self.ToolsToolBar.setWindowTitle(_translate("MascPlug", "toolBar"))
        self.RunToolBar.setWindowTitle(_translate("MascPlug", "toolBar"))
        self.PostTreatmentToolBar.setWindowTitle(_translate("MascPlug", "toolBar"))
        self.WaterQualityToolBar.setWindowTitle(_translate("MascPlug", "toolBar"))
        self.actionWebsite.setText(_translate("MascPlug", "Web site"))
        self.actionWikisite.setText(_translate("MascPlug", "Wiki site"))
        self.actionAbout.setText(_translate("MascPlug", "About"))
        self.actionDeleteModel.setText(_translate("MascPlug", "Delete Model"))
        self.actionRefresh_Database.setText(_translate("MascPlug", "Refresh Connections List"))
        self.actionExport_Model.setText(_translate("MascPlug", "Export Model"))
        self.action_Extract_MNTfor_profile.setText(_translate("MascPlug", " Extract MNT for profile"))
        self.actionSteady.setText(_translate("MascPlug", "Steady"))
        self.actionUnsteady.setText(_translate("MascPlug", "Unsteady"))
        self.actionTranscritical.setText(_translate("MascPlug", "Transcritical"))
        self.actionCreate_Geometry.setText(_translate("MascPlug", "Create Geometry"))
        self.actionCreate_xcas.setText(_translate("MascPlug", "Create xcas"))
        self.actionSteadyRun.setText(_translate("MascPlug", "Steady"))
        self.actionUnsteadyRun.setText(_translate("MascPlug", "Unsteady"))
        self.actionTranscriticalRun.setText(_translate("MascPlug", "Transcritical"))
        self.actionObservation_Load.setText(_translate("MascPlug", "Observation Load"))
        self.actionCreate_New_Model.setText(_translate("MascPlug", "Create New Model"))
        self.actionLoad_Model.setText(_translate("MascPlug", "Load Model"))
        self.actionOptions.setText(_translate("MascPlug", "Options"))
        self.actionRestore_Default_Options.setText(_translate("MascPlug", "Restore Default Options"))
        self.actionExample.setText(_translate("MascPlug", "Create example"))
        self.actionHydrogramme.setText(_translate("MascPlug", "Hydrogramme"))
        self.actionCross_section.setText(_translate("MascPlug", "Cross section"))
        self.actionCross_section_results.setText(_translate("MascPlug", "Cross section results"))
        self.actionParameters.setText(_translate("MascPlug", "Parameters"))
        self.actionRun.setText(_translate("MascPlug", "Run"))
        self.actionDelete_Run.setText(_translate("MascPlug", "Delete Run"))
        self.actionExport_Run.setText(_translate("MascPlug", "Export last run case"))
        self.actionImport_Model.setText(_translate("MascPlug", "Import Model"))
        self.actionParameters_Water_Quality.setText(_translate("MascPlug", "Parameters WQ"))
        self.actionTracer_Laws.setText(_translate("MascPlug", "Tracer Laws"))
        self.actionexport_tracer_files.setText(_translate("MascPlug", "Export Tracer Files"))
        self.actionAdd_WQ_tables.setText(_translate("MascPlug", "Add WQ and Basins tables"))
        self.actionCreate_Basin.setText(_translate("MascPlug", "Create Basin"))
        self.actionCreate_Basin.setToolTip(_translate("MascPlug", "Create Basin"))
        self.actionBasin.setText(_translate("MascPlug", "Basin results"))
        self.actionBasin.setToolTip(_translate("MascPlug", "Basin results"))
        self.action_update_bin.setText(_translate("MascPlug", "Update Executable"))
        self.actionAdd_Structure_tables.setText(_translate("MascPlug", "Add Structure tables"))
        self.actionAdd_Structure_temporal_tables.setText(_translate("MascPlug", "Add Floodgate tables"))
        self.actionStructures.setText(_translate("MascPlug", "Structures"))
        self.actionStructures_weirs.setText(_translate("MascPlug", "Movable Dam"))
        self.actionTest.setText(_translate("MascPlug", "Test"))
        self.actionGraphRes.setText(_translate("MascPlug", "Displacement results"))
        self.actionGraphRes.setToolTip(_translate("MascPlug", "GraphRes"))
        self.actionExport_Model_Files.setText(_translate("MascPlug", "Export Model Files"))
        self.actionImport_Results.setText(_translate("MascPlug", "Import Results"))
        self.actionUpdate_all_PK.setText(_translate("MascPlug", "Update PK"))
        self.actionObservations.setText(_translate("MascPlug", "Obs"))
        self.actionObservations.setToolTip(_translate("MascPlug", "Observations"))
        self.actionScores.setText(_translate("MascPlug", "Scores"))
        self.actionImport_Old_Model.setText(_translate("MascPlug", "Import Old Model"))
        self.actionHydro_Laws.setText(_translate("MascPlug", "Hydro Laws"))
        self.actionHydro_Laws.setToolTip(_translate("MascPlug", "Hydro Laws"))
from qgsprojectionselectionwidget import QgsProjectionSelectionWidget
import resources_rc
